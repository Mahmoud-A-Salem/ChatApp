package com.chat.main;

import static com.chat.form.Chat.ChatBG;
import static com.chat.form.Chat.ChatSP;
import static com.chat.form.Chat.refresh;
import static com.chat.form.Chat.scrollToBottom;

import java.awt.Toolkit;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.ServerSocket;
import java.net.Socket;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

import com.chat.component.*;
import com.chat.form.*;

import message.Message;

/**
 *
 * @author Mahmoud
 */
public class Main extends javax.swing.JFrame {

    /**
     * Creates new form Main
     */
    public Main() {
        initComponents();
        init();
    }

    private void init() {
        this.setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/com/chat/icon/DTIcon.png")));
    }

    public void connect() {
        String url = "jdbc:sqlserver://localhost:1433;databaseName=chat_with_me"; // اتأكد من اسم الداتابيز بتاعتك صح
        String username = "mahmoudd";// اتأكد من اليوزر
        String password = "123456"; // اتأكد من الباسورد
        try {
            con = DriverManager.getConnection(url, username, password);
            ss = con.createStatement();
            System.out.println("Database CONNECTED");
        } catch (SQLException e) {
            System.out.println(e);
        }
    }

    public void database() throws Exception {
        connect();
        try {
            query = "select Message from MyTable";
            rs = ss.executeQuery(query);
            while (rs.next()) {
                String MSG = rs.getString("Message");
                String str = MSG.substring(1);
                char firstChar = MSG.charAt(0);

                if (firstChar == 's') {
                    snd_msg snd = new snd_msg(str);
                    ChatBG.add(snd, "wrap");
                    refresh(ChatBG);
                    scrollToBottom(ChatSP);
                } else {
                    rcv_msg rcv = new rcv_msg(str);
                    Chat.ChatBG.add(rcv, "wrap, al Right");
                    Chat.refresh(Chat.ChatBG);
                    Chat.scrollToBottom(Chat.ChatSP);
                }

                Message msg = new Message();
                msg.setStatus("Message");
                msg.setMessage(MSG);
                outStream.writeObject(msg);
            }
            /// break_data_base;
            Message msg = new Message();
            msg.setStatus("Message");
            msg.setMessage("break_data_base");
            outStream.writeObject(msg);

        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }

    private int pX, pY;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated
    // Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        BackGround = new javax.swing.JPanel();
        Title = new javax.swing.JPanel();
        cmdClose = new javax.swing.JButton();
        cmdClose1 = new javax.swing.JButton();
        AppName = new javax.swing.JLabel();
        AppIcon = new javax.swing.JLabel();
        chat = new com.chat.form.Chat();
        friendList1 = new com.chat.form.FriendList();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setFocusable(false);
        setName("Main"); // NOI18N
        setUndecorated(true);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        BackGround.setBackground(new java.awt.Color(51, 51, 51));
        BackGround.setForeground(new java.awt.Color(255, 255, 255));

        Title.setBackground(new java.awt.Color(51, 51, 51));
        Title.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                TitleMouseDragged(evt);
            }
        });
        Title.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                TitleMousePressed(evt);
            }
        });

        cmdClose.setForeground(new java.awt.Color(255, 255, 255));
        cmdClose.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/chat/icon/close.png"))); // NOI18N
        cmdClose.setBorder(null);
        cmdClose.setContentAreaFilled(false);
        cmdClose.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cmdClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdCloseActionPerformed(evt);
            }
        });

        cmdClose1.setForeground(new java.awt.Color(255, 255, 255));
        cmdClose1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/chat/icon/minimize.png"))); // NOI18N
        cmdClose1.setBorder(null);
        cmdClose1.setContentAreaFilled(false);
        cmdClose1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cmdClose1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdClose1ActionPerformed(evt);
            }
        });

        AppName.setFont(new java.awt.Font("Segoe Print", 1, 16)); // NOI18N
        AppName.setForeground(new java.awt.Color(157, 0, 255));
        AppName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        AppName.setLabelFor(Title);
        AppName.setText("Chat With Me");
        AppName.setPreferredSize(new java.awt.Dimension(70, 30));

        AppIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/chat/icon/TitleIcone.png"))); // NOI18N

        javax.swing.GroupLayout TitleLayout = new javax.swing.GroupLayout(Title);
        Title.setLayout(TitleLayout);
        TitleLayout.setHorizontalGroup(
                TitleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(TitleLayout.createSequentialGroup()
                                .addComponent(AppName, javax.swing.GroupLayout.PREFERRED_SIZE, 127,
                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, 0)
                                .addComponent(AppIcon, javax.swing.GroupLayout.PREFERRED_SIZE, 37,
                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED,
                                        javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(cmdClose1)
                                .addGap(2, 2, 2)
                                .addComponent(cmdClose)));
        TitleLayout.setVerticalGroup(
                TitleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(TitleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(AppName, javax.swing.GroupLayout.DEFAULT_SIZE,
                                        javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(AppIcon))
                        .addComponent(cmdClose, javax.swing.GroupLayout.DEFAULT_SIZE,
                                javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cmdClose1, javax.swing.GroupLayout.DEFAULT_SIZE,
                                javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));

        chat.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                chatMouseClicked(evt);
            }
        });
        chat.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                chatKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout BackGroundLayout = new javax.swing.GroupLayout(BackGround);
        BackGround.setLayout(BackGroundLayout);
        BackGroundLayout.setHorizontalGroup(
                BackGroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(Title, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
                                Short.MAX_VALUE)
                        .addGroup(BackGroundLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(friendList1, javax.swing.GroupLayout.PREFERRED_SIZE,
                                        javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED,
                                        javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(chat, javax.swing.GroupLayout.PREFERRED_SIZE,
                                        javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)));
        BackGroundLayout.setVerticalGroup(
                BackGroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(BackGroundLayout.createSequentialGroup()
                                .addComponent(Title, javax.swing.GroupLayout.PREFERRED_SIZE,
                                        javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(BackGroundLayout
                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(BackGroundLayout.createSequentialGroup()
                                                .addGap(0, 0, Short.MAX_VALUE)
                                                .addComponent(chat, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                        javax.swing.GroupLayout.DEFAULT_SIZE,
                                                        javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(BackGroundLayout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED,
                                                        javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(friendList1, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                        javax.swing.GroupLayout.DEFAULT_SIZE,
                                                        javax.swing.GroupLayout.PREFERRED_SIZE)))));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(BackGround, javax.swing.GroupLayout.DEFAULT_SIZE,
                                javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(BackGround, javax.swing.GroupLayout.DEFAULT_SIZE,
                                javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void cmdCloseActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_cmdCloseActionPerformed
        // TODO add your handling code here:
        try {
            con.close();
            ss.close();
            System.out.println("database closed");
            outStream.close();
            inStream.close();
            serverSocket.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
        System.exit(0);
    }// GEN-LAST:event_cmdCloseActionPerformed

    private void TitleMouseDragged(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_TitleMouseDragged
        // TODO add your handling code here:
        this.setLocation(this.getLocation().x + evt.getX() - pX,
                this.getLocation().y + evt.getY() - pY);
    }// GEN-LAST:event_TitleMouseDragged

    private void TitleMousePressed(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_TitleMousePressed
        // TODO add your handling code here:
        // Get x,y and store them
        pX = evt.getX();
        pY = evt.getY();
    }// GEN-LAST:event_TitleMousePressed

    private void cmdClose1ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_cmdClose1ActionPerformed
        // TODO add your handling code here:
        this.setState(this.ICONIFIED);
    }// GEN-LAST:event_cmdClose1ActionPerformed

    private void chatKeyTyped(java.awt.event.KeyEvent evt) {// GEN-FIRST:event_chatKeyTyped
        // TODO add your handling code here:
    }// GEN-LAST:event_chatKeyTyped

    private void chatMouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_chatMouseClicked
        // TODO add your handling code here:
    }// GEN-LAST:event_chatMouseClicked

    private void formWindowOpened(java.awt.event.WindowEvent evt) {// GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        try {
            serverSocket = new ServerSocket(5234);
            socket = serverSocket.accept();

            outStream = new ObjectOutputStream(socket.getOutputStream());
            inStream = new ObjectInputStream(socket.getInputStream());

            database();

            th = new Thread(new Runnable() {
                @Override
                public void run() {
                    while (true) {
                        try {
                            Message msg = (Message) inStream.readObject();
                            if (msg.getStatus().equals("Message")) {
                                query = "insert into MyTable values(N'c" + msg.getMessage().trim() + "')";
                                try {
                                    ss.execute(query);
                                } catch (SQLException ex) {
                                    ex.printStackTrace();
                                }
                                rcv_msg rcv = new rcv_msg(msg.getMessage().trim());
                                Chat.ChatBG.add(rcv, "wrap, al Right");
                                Chat.refresh(Chat.ChatBG);
                                Chat.scrollToBottom(Chat.ChatSP);
                            } else if (msg.getStatus().equals("File")) {

                                rcvFile rcv = new rcvFile();
                                rcv.set(msg.getName());
                                rcv.setData(msg.getData());
                                Chat.ChatBG.add(rcv, "wrap, al Right");
                                Chat.refresh(Chat.ChatBG);
                                Chat.scrollToBottom(Chat.ChatSP);

                            } else if (msg.getStatus().equals("Photo")) {
                                ImageViewer rcv = new ImageViewer();
                                rcv.setImage(msg.getImage());
                                Chat.ChatBG.add(rcv, "wrap, al Right");
                                Chat.refresh(Chat.ChatBG);
                                Chat.scrollToBottom(Chat.ChatSP);
                            }
                        } catch (Exception e) {
                            e.printStackTrace();
                        }
                    }
                }
            });
            th.start();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }// GEN-LAST:event_formWindowOpened

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        // <editor-fold defaultstate="collapsed" desc=" Look and feel setting code
        // (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the default
         * look and feel.
         * For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        // </editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    private static Thread th;
    public static ServerSocket serverSocket;
    public static Socket socket;
    public static ObjectInputStream inStream;
    public static ObjectOutputStream outStream;
    Connection con;
    public static Statement ss;
    public static String query;
    public static ResultSet rs;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel AppIcon;
    private javax.swing.JLabel AppName;
    private javax.swing.JPanel BackGround;
    private javax.swing.JPanel Title;
    public static com.chat.form.Chat chat;
    private javax.swing.JButton cmdClose;
    private javax.swing.JButton cmdClose1;
    private com.chat.form.FriendList friendList1;
    // End of variables declaration//GEN-END:variables
}
